import Navbar from "./components/Navbar";
import Footer from "./components/Footer";
import ArticleCard from "./components/ArticleCard";
import NewsletterSection from "./components/NewsletterSection";
import { ArrowRight } from "lucide-react";
import Link from "next/link";

export const metadata = {
  title: "Mini-blog Tech - Accueil | Josias Boco",
  description: "D√©couvrez des articles tech adapt√©s au contexte b√©ninois - Next.js, SEO local et d√©veloppement web",
};

export const articles = [
  {
    title: "Pourquoi Next.js est l'avenir du d√©veloppement web au B√©nin",
    excerpt: "Next.js booste les performances des sites web, m√™me avec une connexion Internet limit√©e. D√©couvrez comment en tirer parti dans le contexte b√©ninois.",
    slug: "pourquoi-next-js-est-l-avenir",
    date: "08 Avril 2025",
    readTime: 5,
    category: "D√©veloppement Web",
    content: "Next.js est un framework r√©volutionnaire qui combine rendu statique et serveur pour des performances optimales. Au B√©nin, o√π la connexion internet peut √™tre instable, il permet de cr√©er des sites rapides et accessibles. Avec son routage int√©gr√© et son optimisations d'images, c'est l'outil id√©al pour les d√©veloppeurs modernes.\n\nLes avantages de Next.js sont nombreux:\n\n1. **Performances exceptionnelles** - Le rendu c√¥t√© serveur et la g√©n√©ration statique permettent des chargements ultra-rapides, m√™me avec une connexion lente.\n\n2. **SEO optimis√©** - Le rendu c√¥t√© serveur facilite l'indexation par les moteurs de recherche.\n\n3. **Exp√©rience d√©veloppeur am√©lior√©e** - Hot reloading, routage simplifi√© et √©cosyst√®me React rendent le d√©veloppement agr√©able.\n\n4. **D√©ployable partout** - Compatible avec Vercel, Netlify ou tout h√©bergeur traditionnel accessible au B√©nin.\n\nAvec Next.js, cr√©ez des sites performants m√™me dans des conditions de connectivit√© difficiles."
  },
  {
    title: "SEO pour entrepreneurs b√©ninois: Dominer les recherches locales",
    excerpt: "Comment ranker sur Google avec des mots cl√©s comme 'Cotonou business' et attirer des clients locaux au B√©nin.",
    slug: "seo-pour-entrepreneurs-locaux",
    date: "04 Avril 2025",
    readTime: 7,
    category: "Marketing Digital",
    content: "Le SEO est crucial pour se d√©marquer en ligne, m√™me au B√©nin. En ciblant des mots-cl√©s comme 'Cotonou business' ou 'd√©veloppeur web Porto-Novo', les entrepreneurs peuvent attirer des clients locaux. Une structure claire, des balises meta et du contenu pertinent sont les cl√©s du succ√®s.\n\nVoici les strat√©gies essentielles pour les entrepreneurs b√©ninois:\n\n1. **Recherche de mots-cl√©s localis√©s** - Identifiez les termes que vos clients potentiels utilisent, en incluant des r√©f√©rences g√©ographiques comme Cotonou, Porto-Novo, ou B√©nin.\n\n2. **Google My Business** - Cr√©ez et optimisez votre fiche entreprise pour appara√Ætre dans les recherches locales et sur Google Maps.\n\n3. **Contenu adapt√© au contexte local** - Abordez les probl√©matiques sp√©cifiques √† votre r√©gion et proposez des solutions adapt√©es.\n\n4. **Optimisation mobile** - Au B√©nin, la majorit√© des recherches sont effectu√©es sur mobile. Assurez-vous que votre site est parfaitement responsive.\n\n5. **Balisage schema.org** - Impl√©mentez des donn√©es structur√©es pour aider Google √† comprendre votre contenu et √† l'afficher de mani√®re optimale dans les r√©sultats de recherche.\n\nEn appliquant ces techniques, votre entreprise gagnera en visibilit√© et attirera davantage de clients locaux."
  },
  {
    title: "Coder offline au B√©nin: √ätre productif malgr√© les coupures",
    excerpt: "Mes astuces pratiques pour d√©velopper sans internet constant et rester productif au B√©nin.",
    slug: "coder-offline-au-benin",
    date: "01 Avril 2025",
    readTime: 6,
    category: "Productivit√©",
    content: "Avec une connexion limit√©e au B√©nin, coder offline devient une comp√©tence essentielle. J'utilise VS Code avec la documentation t√©l√©charg√©e et Next.js pour structurer mes projets en local. Les cybercaf√©s servent juste pour l'upload. Voici mes astuces pour rester productif.\n\nMes techniques pour d√©velopper efficacement offline:\n\n1. **Documentation locale** - T√©l√©chargez √† l'avance la documentation des technologies que vous utilisez (MDN pour JavaScript, React, etc.).\n\n2. **VS Code et extensions offline** - Configurez votre environnement de d√©veloppement pour fonctionner sans connexion et installez les extensions essentielles.\n\n3. **Solutions de versionnement local** - Utilisez Git en mode local pour suivre vos modifications, puis synchronisez quand la connexion est disponible.\n\n4. **Frameworks avec d√©veloppement local** - Next.js, Vue.js ou Create React App fonctionnent parfaitement sans connexion permanente.\n\n5. **Tests unitaires autonomes** - √âcrivez et ex√©cutez des tests sans d√©pendre d'API externes.\n\nCes strat√©gies m'ont permis de rester productif m√™me pendant les p√©riodes de d√©connexion prolong√©es ou de faible d√©bit au B√©nin."
  },
  {
    title: "Cr√©er une API REST avec Node.js et MongoDB pour les startups b√©ninoises",
    excerpt: "Guide √©tape par √©tape pour d√©velopper une API robuste adapt√©e aux besoins des entreprises locales.",
    slug: "api-rest-node-mongodb-startups-beninoises",
    date: "28 Mars 2025",
    readTime: 8,
    category: "Backend",
    content: "Les API REST sont essentielles pour les applications modernes. Dans ce guide, je vous montre comment cr√©er une API performante avec Node.js et MongoDB, optimis√©e pour le contexte b√©ninois avec ses d√©fis sp√©cifiques de connectivit√©."
  },
];

export default function Home() {
  // S√©parer les articles r√©cents des autres
  const featuredArticle = articles[0];
  const recentArticles = articles.slice(1, 3);
  const moreArticles = articles.slice(3);

  return (
    <div className="min-h-screen bg-gray-50 dark:bg-gray-900 flex flex-col">
      <Navbar />
      
      <main className="flex-grow">
        {/* Hero Section */}
        <section className="py-16 bg-gradient-to-br from-blue-600 to-blue-800 text-white">
          <div className="max-w-6xl mx-auto px-4">
            <div className="text-center">
              <h1 className="text-4xl md:text-5xl font-bold mb-4">Mini-Blog Tech</h1>
              <p className="text-xl md:text-2xl opacity-90 max-w-2xl mx-auto mb-8">
                Des articles tech adapt√©s au contexte b√©ninois pour d√©veloppeurs et entrepreneurs
              </p>
              <Link 
                href="/articles" 
                className="inline-flex items-center bg-white text-blue-700 font-medium px-6 py-3 rounded-lg hover:bg-blue-50 transition-colors"
              >
                Parcourir les articles <ArrowRight size={18} className="ml-2" />
              </Link>
            </div>
          </div>
        </section>

        {/* Featured Article */}
        <section className="py-10 px-4">
          <div className="max-w-6xl mx-auto">
            <h2 className="text-2xl font-bold text-gray-800 dark:text-gray-200 mb-6">
              √Ä la une
            </h2>
            <div className="bg-white dark:bg-gray-800 rounded-xl shadow-md overflow-hidden">
              <div className="md:flex">
                <div className="md:flex-1 p-6 md:p-8">
                  {featuredArticle.category && (
                    <span className="inline-block bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300 text-sm font-medium px-3 py-1 rounded-full mb-3">
                      {featuredArticle.category}
                    </span>
                  )}
                  <h3 className="text-2xl font-bold text-gray-800 dark:text-gray-100 mb-3">
                    {featuredArticle.title}
                  </h3>
                  <div className="flex items-center text-sm text-gray-500 dark:text-gray-400 mb-4">
                    <span>{featuredArticle.date}</span>
                    <span className="mx-2">‚Ä¢</span>
                    <span>{featuredArticle.readTime} min de lecture</span>
                  </div>
                  <p className="text-gray-600 dark:text-gray-300 mb-6">
                    {featuredArticle.excerpt}
                  </p>
                  <Link 
                    href={`/articles/${featuredArticle.slug}`}
                    className="inline-flex items-center text-blue-600 dark:text-blue-400 font-medium group"
                  >
                    Lire la suite...
                    <ArrowRight size={16} className="ml-1 transition-transform group-hover:translate-x-1" />
                  </Link>
                </div>
                <div className="md:w-2/5 bg-blue-100 dark:bg-blue-900 flex items-center justify-center p-6">
                  <div className="text-center">
                    <div className="text-6xl text-blue-600 dark:text-blue-400 mb-3">üì±</div>
                    <p className="text-blue-700 dark:text-blue-300 font-medium">D√©veloppement Web Moderne</p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </section>

        {/* Recent Articles */}
        <section className="py-10 px-4">
          <div className="max-w-6xl mx-auto">
            <div className="flex justify-between items-center mb-6">
              <h2 className="text-2xl font-bold text-gray-800 dark:text-gray-200">
                Articles r√©cents
              </h2>
              <Link 
                href="/articles" 
                className="text-blue-600 dark:text-blue-400 font-medium hover:underline flex items-center"
              >
                Voir tous <ArrowRight size={16} className="ml-1" />
              </Link>
            </div>
            <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
              {recentArticles.map((article) => (
                <ArticleCard
                  key={article.slug}
                  title={article.title}
                  excerpt={article.excerpt}
                  slug={article.slug}
                  date={article.date}
                  readTime={article.readTime}
                  category={article.category}
                />
              ))}
              {moreArticles.map((article) => (
                <ArticleCard
                  key={article.slug}
                  title={article.title}
                  excerpt={article.excerpt}
                  slug={article.slug}
                  date={article.date}
                  readTime={article.readTime}
                  category={article.category}
                />
              ))}
            </div>
          </div>
        </section>
        
        {/* Newsletter */}
        <NewsletterSection />
      </main>
      
      <Footer />
    </div>
  );
}